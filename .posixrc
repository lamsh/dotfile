#!/bin/sh
##############################################################################
# \file      .posixrc
# \author    SENOO, Ken
# \copyright CC0
##############################################################################

## \brief POSIX compatible shell configure

## Prompt
PURPLE='\033[35m'
RED='\033[31m'
CLEAR='\033[m'

if [ -n "$BASH" ]; then
	ENCLOSE_OPEN='\\\['
	ENCLOSE_CLOSE='\\\]'
elif [ -n "$ZSH_NAME" ]; then
	ENCLOSE_OPEN='%%{'
	ENCLOSE_CLOSE='%%}'
fi

for color in PURPLE RED CLEAR
do
	eval "${color}=${ENCLOSE_OPEN}\$${color}${ENCLOSE_CLOSE}"
done

: ${LOGNAME:=$(logname)}  # for Windows shell
: ${COLUMNS:=80}            # for sh

CWD='$(pwd | sed s@$HOME@~@)'
USERNAME=$(id -nu)
HOST=$(uname -n)
[ $(id -u) = 0 ] && PROMPT_SIGN='#' || PROMPT_SIGN='$'
PROMPT_NAME="$PURPLE$USERNAME@$HOST:$RED"
PROMPT_MARK="$PURPLE$PROMPT_SIGN $CLEAR"

PS1="\$([ \$((COLUMNS - \$(echo \"$USERNAME@$HOST:$CWD$\" | wc -m))) -le 15 ] &&
	printf '$PROMPT_NAME'\"$CWD\"'\n$PROMPT_MARK' ||
	printf '$PROMPT_NAME'\"$CWD\"'''$PROMPT_MARK' )"

## TODO: enable posix compatible
## Terminal title
case "$TERM" in ?term*|rxvt*|screen*)
	PROMPT_COMMAND='printf "\033]0;$0@$HOST: $(pwd | sed s@$HOME@~@)\007"'
esac

## Environmental variables
### Interactive shell local development PATH
case "$-" in *i*)
	### System path
	[ -n "${PATH%%sbin*}" ] &&
		export PATH="/usr/local/sbin:/usr/sbin:/sbin:$PATH"
	# [ -n "${LD_LIBRARY_PATH%%*lib*}" ] &&
	# 	export LD_LIBRARY_PATH="/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH"
	# [ -n "${CPATH%%*include*}" ] &&
	# 	export CPATH="/usr/local/include:/usr/include:$CPATH"
	# [ -n "${MANPATH%%*man*}" ] &&
	# 	export MANPATH="/usr/local/share/man:/usr/share/man:$MANPATH"
	# [ -n "${INFOPATH%%*info*}" ] &&
	# 	export INFOPATH="/usr/local/share/info:/usr/share/info:$INFOPATH"
	# [ -n "${PKG_CONFIG_PATH%%*pkgconfig*}" ] &&
	# 	export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/lib/pkgconfig:${PKG_CONFIG_PATH}"

	### Local installation path
	LOCAL="$HOME/.local"
	case "$PATH" in *"$LOCAL"*);; *)
		export PATH="$LOCAL/bin:$PATH"
		export LD_LIBRARY_PATH="$LOCAL/lib:$LD_LIBRARY_PATH"
		export CPATH="$LOCAL/include:$CPATH"
		export MANPATH="$LOCAL/share/man:$MANPATH"
		export INFOPATH="$LOCAL/share/info:$INFOPATH"
		export PKG_CONFIG_PATH="$LOCAL/lib/pkgconfig:${PKG_CONFIG_PATH}"

		export GEM_HOME="$LOCAL"       # ruby gem
		export PYTHONUSERBASE="$LOCAL" # python pip
		: ${PYTHONVERSION:=$(python3 -V 2>&1 | grep -E -o '[0-9]+\.[0-9]+')}
	esac


	### Locale
	export LANG='ja_JP.UTF-8'
	export LANGUAGE='en'
	export LC_TIME='en_US.UTF-8'
	export LC_MESSAGES='en_US.UTF-8'

	## Invalid stty keybind
	# stty start undef
export DISPLAY="${DISPLAY:-:0}"  # if DISPLAY is none, then set.
esac

: ${HOME:=~}      # for MSYS

### Windows shell
export CYGWIN='nodosfilewarning winsymlinks:nativestrict'
export MSYS='winsymlinks:nativestrict'

### For wine
export WINEARCH='win32'
export WINEPREFIX="$HOME/.wine32"

### For .deb package
export DEBFULLNAME='Ken SENOO'
export DEBEMAIL='mslamsh20131029@outlook.jp'

### For unzip encoding
if grep -sq 'debian' /etc/os-release; then
	export UNZIP='-O cp932'
	export ZIPINFO='-O cp932'
fi


## Alias
### Enable alias in non-interactive shell
[ -n "$BASH"     ] && shopt -s expand_aliases
[ -n "$ZSH_NAME" ] && setopt aliases

### Windows character encoding convert
if [ "$OS" = "Windows_NT" ]; then
	wincmd(){
	  CMD=$1
	  shift
	  $CMD $* 2>&1 | iconv -f CP932 -t UTF-8
	}

	alias ipconfig='wincmd ipconfig'
	alias netstat='wincmd netstat'
	alias netsh='wincmd netsh'
	alias taskkill='wincmd taskkill'
	alias reg='wincmd reg'
	alias cs='wincmd cscript.exe -NoLogo'
	alias ws='wincmd wscript.exe -NoLogo'
	alias choco='wincmd choco'
else
	alias cs='wine cscript.exe -NoLogo'
	alias ws='wine wscript.exe -NoLogo'
fi

### ls
alias ls='ls -AFh --color=auto'
alias ll="ls -Gl --time-style=+'%Y-%m-%d %H:%M'"
alias l='ls'

### ls color
if command -v dircolors >&-; then
	[ -f "${d:=~/.dir_colors}" ] && eval $(dircolors "$d") || eval $(dircolors -b)
fi

### Default to human readable figures
alias df='df -h'
alias du='du -h'
alias ps='ps w'

### Git
alias gic='git commit -am'
alias gia='git add'
alias gim='git mv'
alias gis='git status'
alias glone='git clone'

### Pager
export PAGER='less'
command -v lv >&- && export PAGER='lv'
export LV='-c -l'
export LESS='-imR'
alias info='info --vi-keys'


### Open
alias o='open'
case "${OSTYPE}" in
	freebsd*|darwin*) alias o='open' ;;
	linux*)           alias open='xdg-open' ;; # alias open="gnome-open";;
	cygwin*)          alias open='cygstart' ;;
	msys*)            alias open='start';;
esac

#### Copy to clipboard
command -v clip    >&- && alias clip='iconv -s -f UTF-8 -t CP932 | clip' # MSYS (Windows)
command -v xsel    >&- && alias clip='xsel -ib' # Linux
command -v putclip >&- && alias clip='putclip' # Cygwin
command -v pbcopy  >&- && alias clip='pbcopy' # Mac

### development
alias py='python3'
alias py2='python2'
alias py3='python3'
alias ipy='ipython3'
alias ipy2='ipython2'
alias ipy3='ipython3'
alias rb='ruby'
alias gp='g++ -Wall -Wextra -pedantic -std=c++1y'
alias gc='gcc -Wall -Wextra -pedantic -std=gnu11'
alias gf='gfortran -Wall -O3 -static'

command -v xstow >&- && alias stow='xstow'

## stow conflict list
# --ignore="dir|gschemas.compiled|icon-theme-cache"
alias stow="stow --ignore='dir|gschemas.compiled|icon-theme.cache'"

if command -v vim >&-; then
	alias vi='vim'
	alias vim='vim -X'
	export EDITOR='vim'
fi
# export SVN_EDITOR=$EDITOR

alias now='date +%Y%m%dT%H%M%S'

# zshでは{=var}というようにして空白区切りで展開して使う。じゃないと使えない
# WXCONFIG=$(wx-config --cppflags --libs 2>&- | tr \"\n\" ' ') # wxwidgetsのコンパイルフラグ
WXCONFIG=$(wx-config --cppflags --libs 2>&-)
GTKCONFIG=$(pkg-config --cflags --libs gtk+-3.0 2>&-)
LIBCPP='-static-libgcc -static-libstdc++'

## grep 2.21 or later, deprecated GREP_OPTIONS environmental variable
GREP_OPTIONS='--color=auto -I --exclude={tags,GTAGS,GRTAGS,GPATH}'
GREP_VERSION=$(grep -V | sed -n '1s/[^0-9]*\([0-9]*\)\.\([0-9]*\).*/\1\2/p')
if [ "$GREP_VERSION" -gt 25 ]; then  #  v2.5.2 or later
	GREP_OPTIONS="${GREP_OPTIONS} --exclude-dir={.,..,.git,.svn,obj}"
else  # --exclude=*dir* option is only available when --exclude-dir disabled
	GREP_OPTIONS="${GREP_OPTIONS} --exclude={..*,*.git*,*.svn*}"
fi
alias grep="grep ${GREP_OPTIONS}"

: ${SCREEN_SHELL:=$(command -v zsh )}
: ${SCREEN_SHELL:=$(command -v bash)}

## For not having screen-256color, but having xterm-256color support.
case "$(toe -a 2>&-)" in
	*screen-256color*) SCREEN_TERM='screen-256color';;
	                *) SCREEN_TERM="$TERM"          ;;
esac

alias screen="screen -T $SCREEN_TERM -s $SCREEN_SHELL"
alias tmux="SHELL=$SCREEN_SHELL tmux"
