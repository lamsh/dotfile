#!/bin/sh
##############################################################################
# \file      .posixrc
# \author    SENOO, Ken
# \copyright CC0
##############################################################################

## \brief POSIX compatible shell configure

## Prompt
PURPLE="\033[35m"
RED="\033[31m"
CLEAR="\033[m"

if [ -n "$BASH" ]; then
	enclose_open="\\\["
	enclose_close="\\\]"
	pwd="\w"
elif [ -n "$ZSH_NAME" ]; then
	enclose_open="%%{"
	enclose_close="%%}"
fi

for color in PURPLE RED CLEAR
do
	eval "${color}=${enclose_open}\$${color}${enclose_close}"
done

: ${LOGNAME:="$(logname)"}  # for Windows shell
: ${COLUMNS:=80}            # for sh

CWD='$(pwd | sed s@$HOME@~@)'
USERNAME="$(id -nu)"
HOST="$(uname -n)"
[ $(id -u) = 0 ] && PROMPT_SIGN='#' || PROMPT_SIGN='$'
PROMPT_NAME="$PURPLE$USERNAME@$HOST:$RED"
PROMPT_MARK="$PURPLE$PROMPT_SIGN $CLEAR"

PS1="\$([ \$((COLUMNS - \$(echo \"$PROMPT_NAME\$PWD\" | wc -m))) -lt 15 ] &&
	printf '$PROMPT_NAME'\"$CWD\"'\n$PROMPT_MARK' ||
	printf '$PROMPT_NAME'\"$CWD\"'''$PROMPT_MARK' )"

## TODO: enable posix compatible
## terminal title
case "${TERM}" in
	?term*|rxvt*|screen*)
		PROMPT_COMMAND='printf "\033]0;$0@$HOST: $(pwd | sed s@$HOME@~@)\007"';;
esac

## Environmental variables
### Interactive shell local development PATH
if [ -z "${-##*i*}" ]; then
	### system path
	# export LD_LIBRARY_PATH="/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH"
	# export CPATH="/usr/local/include:/usr/include:$CPATH"

	### Local installation path
	LOCAL="$HOME/.local"
	export PATH="$LOCAL/bin:$PATH"
	export LD_LIBRARY_PATH="$LOCAL/lib:$LD_LIBRARY_PATH"
	export CPATH="$LOCAL/include:$CPATH"
	export MANPATH="$LOCAL/man:$LOCAL/share/man:$MANPATH"
	export INFOPATH="$LOCAL/info:$LOCAL/share/info:$INFOPATH"

	export PKG_CONFIG_PATH="$LOCAL/lib/pkgconfig:${PKG_CONFIG_PATH}"

	export GEM_HOME="$LOCAL"       # ruby gem

	export PYTHONUSERBASE="$LOCAL" # python pip
	if [ "$(command -v python3)" ]; then
		: ${PYTHONVERSION:=$(python3 -V 2>&1 | grep -E -o '[0-9]+\.[0-9]+')}
	fi

	### locale
	export LANG='ja_JP.UTF-8'
	export LANGUAGE='en'
	export LC_TIME='en_US.UTF-8'
	export LC_MESSAGES='en_US.UTF-8'

	## invalid stty keybind
	# stty start undef
fi

export DISPLAY=${DISPLAY:-:0}  # if DISPLAY is none, then set.
export HOME=${HOME:-~}         # for MSYS

### WIndows shell
export CYGWIN="nodosfilewarning winsymlinks:nativestrict"
export MSYS="winsymlinks:nativestrict"

### for wine
export WINEARCH='win32'
export WINEPREFIX="$HOME/.wine32"

### for .deb package
export DEBFULLNAME='Ken SENOO'
export DEBEMAIL='mslamsh20131029@outlook.jp'

### for unzip encoding
if [ -f /etc/os-release ] && grep -q -i 'debian' /etc/os-release; then
	export UNZIP="-O cp932"
	export ZIPINFO="-O cp932"
fi


## Alias
### enable alias in non-interactive shell
[ -n "$BASH"     ] && shopt -s expand_aliases
[ -n "$ZSH_NAME" ] && setopt aliases

### Windows character encoding convert
if [ "${OS}" = "Windows_NT" ]; then
	wincmd(){
	  CMD=$1
	  shift
	  $CMD $* 2>&1 | iconv -f CP932 -t UTF-8
	}

	alias ipconfig='wincmd ipconfig'
	alias netstat='wincmd netstat'
	alias netsh='wincmd netsh'
	alias taskkill='wincmd taskkill'
	alias reg='wincmd reg'
	alias cs="wincmd cscript.exe -NoLogo"
	alias ws="wincmd wscript.exe -NoLogo"
	alias choco="wincmd choco"
else
	alias cs="wine cscript.exe -NoLogo"
	alias ws="wine wscript.exe -NoLogo"
fi

### ls
alias ls="ls -AFh --color=auto"
alias ll="ls -Gl --time-style=+'%Y-%m-%d %H:%M'"
alias l="ls"
[ -f ~/.dir_colors ] && eval "$(dircolors ~/.dir_colors)"

### Default to human readable figures
alias df='df -h'
alias du='du -h'
alias ps="ps w"

### Git
alias gic="git commit -am"
alias gia="git add"
alias gim="git mv"
alias gis="git status"
alias glone="git clone"

### Pager
export PAGER="less"
[ "$(command -v lv)" ] && export PAGER='lv'
export LV="-c -l"
export LESS="-imR"
alias info="info --vi-keys"


### open
alias o="open"
case "${OSTYPE}" in
	freebsd*|darwin*) alias o="open" ;;
	linux*)           alias open="xdg-open" ;; # alias open="gnome-open";;
	cygwin*)          alias open="cygstart" ;;
	msys*)            alias open="start";;
esac

#### Copy to clipboard
[ "$(command -v clip)"    ] && alias clip="iconv -s -f UTF-8 -t cp932 | clip" # MSYS (Windows)
[ "$(command -v xsel)"    ] && alias clip="xsel -ib" # Linux
[ "$(command -v putclip)" ] && alias clip="putclip" # Cygwin
[ "$(command -v pbcopy)"  ] && alias clip="pbcopy" # Mac

### development
alias py='python3'
alias py2='python2'
alias py3='python3'
alias ipy='ipython3'
alias ipy2='ipython2'
alias ipy3='ipython3'
alias rb='ruby'
alias gp='g++ -Wall -Wextra -pedantic -std=c++1y'
alias gc='gcc -Wall -Wextra -pedantic -std=gnu11'
alias gf='gfortran -Wall -O3 -static'

[ "$(command -v xstow)" ] && alias stow='xstow'
## stow conflict list
# --ignore="dir|gschemas.compiled|icon-theme-cache"
alias stow="stow --ignore='dir|gschemas.compiled|icon-theme.cache'"

[ "$(command -v vim)" ] && alias vi='vim'
alias vim="vim -X"
[ "$(command -v vim)" ] && export EDITOR='vim'
# export SVN_EDITOR=$EDITOR

alias now="date +%Y%m%dT%H%M%S"

# zshでは{=var}というようにして空白区切りで展開して使う。じゃないと使えない
# [ "$(command -v wx-config)" ] && WXCONFIG="$(wx-config --cppflags --libs | tr \"\n\" ' ')" # wxwidgetsのコンパイルフラグ
LIBCPP="-static-libgcc -static-libstdc++"

cmd="pkg-config --silence-errors --cflags --libs gtk+-3.0"
[ "$(command -v pkg-config)" ] && [ "$(eval $cmd)" ] && GTK="$(eval $cmd)"

## grep 2.21 or later, deprecated GREP_OPTIONS environmental variable
GREP_VERSION=$(grep -V | head -n 1 | sed -e 's/[^0-9.]//g' -e 's/\.[0-9]$//')
GREP_OPTIONS="--color=auto -I"
if [ "$(echo $GREP_VERSION > 2.5 | bc)" = 1 ]; then  #  v2.5.2 or later
	GREP_OPTIONS="${GREP_OPTIONS} --exclude-dir={.,..,.git,.svn,obj}"
fi
GREP_OPTIONS="${GREP_OPTIONS} --exclude={tags,GTAGS,GRTAGS,GPATH}"
alias grep="grep ${GREP_OPTIONS}"

: ${MYSHELL:=$(command -v zsh )}
: ${MYSHELL:=$(command -v bash)}

MYTERM=$([ -z "${TERM##*256*}" ] && echo screen-256color || echo screen)
alias screen="screen -T $MYTERM -s $MYSHELL"
alias tmux="SHELL=$MYSHELL tmux"
